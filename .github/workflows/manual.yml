name: Deploy to AWS EC2
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Connect to EC2 and Run Deployment
        run: |
          echo "🚀 Connecting to EC2..."
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.USERNAME }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          
          echo "✅ SSH Connection Established!"

          # Debugging: Check if screen exists
          if ! command -v screen &> /dev/null; then
              echo "⚠️ Screen is not installed. Installing now..."
              sudo apt update && sudo apt install -y screen
          else
              echo "✅ Screen is installed."
          fi

          # Debugging: Check existing screen sessions
          echo "🖥️ Checking existing screen sessions..."
          screen -ls || echo "No active screen sessions."

          # Ensure Docker is installed
          if ! command -v docker &> /dev/null; then
              echo "🐳 Installing Docker..."
              sudo apt update && sudo apt install -y docker.io
          fi

          # Stop the existing screen session if running
          if screen -ls | grep -q "production"; then
              echo "🛑 Stopping existing screen session..."
              screen -S production -X quit
          fi

          # Debugging: Recheck screen sessions after killing
          echo "🖥️ Active screen sessions after stopping:"
          screen -ls || echo "No active screen sessions."

          # Start a new screen session
          echo "🚀 Starting new screen session for deployment..."
          screen -L -Logfile ~/deploy.log -S production -dm bash -c '
          
          echo "📦 Pulling latest changes..."
          cd /home/ubuntu/stock-viz-docker || { echo "❌ Directory not found"; exit 1; }
          git reset --hard
          git pull origin main || { echo "❌ Git pull failed"; exit 1; }
          git submodule update --recursive --remote || { echo "❌ Submodule update failed"; exit 1; }

          echo "🛑 Stopping existing containers..."
          docker compose down --volumes --rmi all --remove-orphans || true

          echo "🔨 Building and running Next.js app and other services..."
          docker compose up -d --build || { echo "❌ Deployment failed"; exit 1; }

          echo "✅ Deployment Successful!"
          docker compose ps
          '

          echo "✅ Deployment started in screen session: production"
          echo "🔍 Check logs using: screen -r production or cat ~/deploy.log"

          EOF
